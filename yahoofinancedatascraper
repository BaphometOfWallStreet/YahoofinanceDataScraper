from vaderSentiment.vaderSentiment import SentimentIntensityAnalyzer
import yfinance as yf

def map_sentiment_to_trend(sentiment):
    if sentiment >= 0.2:
        return "Strong Buy"
    elif 0.1 <= sentiment < 0.2:
        return "Buy"
    elif -0.1 <= sentiment < 0.1:
        return "Hold"
    elif -0.2 <= sentiment < -0.1:
        return "Under-perform"
    else:
        return "Sell"

def get_after_hours_price(ticker):
    try:
        # Get after-hours price using yfinance
        stock = yf.Ticker(ticker)
        after_hours_data = stock.history(period="1d", interval="1m", prepost=True)
        
        if not after_hours_data.empty:
            # The last row contains the most recent after-hours price
            after_hours_price = after_hours_data.iloc[-1]["Close"]
            return after_hours_price

    except Exception as e:
        print(f"Error fetching after-hours price: {e}")

    return None

def get_stock_info(ticker):
    try:
        # Capitalize the ticker
        ticker = ticker.upper()

        # Get stock information, including the company name
        stock_info = yf.Ticker(ticker).info
        company_name = stock_info.get('longName', '')

        # Get current price using yfinance
        stock = yf.Ticker(ticker)

        # Check if the stock information is available
        if stock.info:
            current_price = stock.history(period="1mo")["Close"].iloc[-1]  # Change the period to "1mo" for 1 month

            # Get after-hours price
            after_hours_price = get_after_hours_price(ticker)

            # Display information
            print(f"Stock Ticker: {ticker}")
            print(f"Company Name: {company_name}")
            print(f"Current Price: {current_price}")
            print(f"After-Hours Price: {after_hours_price if after_hours_price is not None else 'N/A'}")

            # ... (rest of the code)

        else:
            print(f"Error: No data found for {ticker}. The symbol may be delisted or unavailable.")

    except Exception as e:
        print(f"Error: {e}")

if __name__ == "__main__":
    stock_ticker = input("Enter the stock ticker symbol: ")
    get_stock_info(stock_ticker)
